<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="DevHome.SetupFlow.Views.QuickstartPlaygroundView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:DevHome.SetupFlow.Controls"
    xmlns:ctcontrols="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:setupFlowBehaviors="using:DevHome.SetupFlow.Behaviors"
    xmlns:viewmodels="using:DevHome.SetupFlow.ViewModels"
    mc:Ignorable="d">

    <setupFlowBehaviors:SetupFlowNavigationBehavior.NextTemplate>
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Button
                x:Uid="QuickstartPlaygroundSaveButton"
                Margin="4,0"
                Command="{x:Bind ViewModel.SaveProjectCommand}"
                TabIndex="30" />
            <Button
                Margin="4,0"
                Command="{x:Bind ViewModel.LaunchProjectHostCommand}"
                Content="{x:Bind ViewModel.LaunchButtonText, Mode=OneWay}"
                Style="{ThemeResource AccentButtonStyle}"
                TabIndex="31"
                Visibility="{x:Bind ViewModel.IsLaunchButtonVisible, Mode=OneWay}" />
            <DropDownButton
                x:Uid="QuickstartPlaygroundLaunchDropDownButton"
                Margin="4,0"
                Style="{ThemeResource AccentButtonStyle}"
                TabIndex="32"
                Visibility="{x:Bind ViewModel.IsLaunchDropDownVisible, Mode=OneWay}">
                <DropDownButton.Flyout>
                    <MenuFlyout x:Name="DropDownButtonFlyout" />
                </DropDownButton.Flyout>
            </DropDownButton>
        </StackPanel>
    </setupFlowBehaviors:SetupFlowNavigationBehavior.NextTemplate>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///DevHome.SetupFlow/Styles/SetupFlowStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///DevHome.SetupFlow/Styles/QuickstartStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <controls:SetupShell Orchestrator="{x:Bind ViewModel.Orchestrator, Mode=OneWay}">
        <Grid x:Name="ContentArea">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" VerticalAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Vertical">
                        <Grid Margin="0,0,0,30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Uid="QuickstartPlaygroundPromptHeader"
                                Grid.Column="0"
                                Margin="10"
                                VerticalAlignment="Center"
                                TextWrapping="WrapWholeWords" />
                            <ctcontrols:WrapPanel
                                Grid.Column="1"
                                Margin="10"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                                <TextBlock
                                    x:Name="ExtensionProviderTextBlock"
                                    x:Uid="QuickstartPlaygroundExtensionProvider"
                                    Margin="10"
                                    VerticalAlignment="Center"
                                    Style="{ThemeResource BodyTextBlockStyle}" />
                                <ComboBox
                                    x:Name="ExtensionProviderComboBox"
                                    MinWidth="200"
                                    Margin="10"
                                    VerticalAlignment="Center"
                                    AutomationProperties.LabeledBy="{Binding ElementName=ExtensionProviderTextBlock}"
                                    DisplayMemberPath="DisplayName"
                                    IsDropDownOpen="{x:Bind ViewModel.IsQuickstartProjectComboboxExpanded, Mode=TwoWay}"
                                    IsEnabled="{x:Bind ViewModel.EnableQuickstartProjectCombobox, Mode=OneWay}"
                                    ItemsSource="{x:Bind ViewModel.QuickstartProviders}"
                                    Loading="ExtensionProviderComboBox_Loading"
                                    SelectedItem="{x:Bind ViewModel.ActiveQuickstartSelection, Mode=TwoWay}"
                                    SelectionChanged="ExtensionProviderComboBox_SelectionChanged"
                                    TabIndex="1" />
                            </ctcontrols:WrapPanel>
                        </Grid>
                        <ctcontrols:WrapPanel
                            x:Name="ExamplePrompts"
                            Orientation="Horizontal"
                            Visibility="{x:Bind ViewModel.ShowExamplePrompts, Mode=OneWay}">
                            <Button
                                Command="{x:Bind ViewModel.CopyExamplePromptCommand}"
                                CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"
                                Content="{x:Bind ViewModel.SamplePromptOne, Mode=OneWay}"
                                Style="{StaticResource SamplePromptStyle}"
                                TabIndex="2" />
                            <Button
                                Command="{x:Bind ViewModel.CopyExamplePromptCommand}"
                                CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"
                                Content="{x:Bind ViewModel.SamplePromptTwo, Mode=OneWay}"
                                Style="{StaticResource SamplePromptStyle}"
                                TabIndex="3" />
                            <Button
                                Command="{x:Bind ViewModel.CopyExamplePromptCommand}"
                                CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"
                                Content="{x:Bind ViewModel.SamplePromptThree, Mode=OneWay}"
                                Style="{StaticResource SamplePromptStyle}"
                                TabIndex="4" />
                        </ctcontrols:WrapPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBox
                                x:Name="CustomPrompt"
                                Grid.Row="0"
                                Grid.ColumnSpan="2"
                                MinWidth="800"
                                MinHeight="60"
                                Margin="10"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                AcceptsReturn="True"
                                GotFocus="CustomPrompt_GotFocus"
                                IsReadOnly="{x:Bind ViewModel.IsPromptTextBoxReadOnly, Mode=OneWay}"
                                MaxLength="2000"
                                PlaceholderText="{x:Bind ViewModel.PromptTextBoxPlaceholder, Mode=OneWay}"
                                TabIndex="5"
                                Text="{x:Bind ViewModel.CustomPrompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                TextChanged="CustomPrompt_TextChanged"
                                TextWrapping="Wrap" />
                            <TextBlock
                                x:Name="PromptCharacterCount"
                                Grid.Row="1"
                                Width="Auto"
                                Margin="0,0,10,10"
                                TextAlignment="Right" />
                            <Grid
                                Grid.Row="2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel
                                    Grid.Column="0"
                                    HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        x:Uid="QuickstartPlaygroundAIWarning"
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center" />
                                    <StackPanel Orientation="Horizontal" Visibility="{x:Bind ViewModel.ShowPrivacyAndTermsLink, Mode=OneWay}">
                                        <HyperlinkButton
                                            x:Uid="QuickstartPlaygroundAIWarningTerms"
                                            VerticalAlignment="Center"
                                            NavigateUri="{x:Bind ViewModel.TermsUri, Mode=OneWay}"
                                            TabIndex="7"
                                            ToolTipService.ToolTip="{x:Bind ViewModel.TermsUri, Mode=OneWay}" />
                                        <TextBlock VerticalAlignment="Center">|</TextBlock>
                                        <HyperlinkButton
                                            x:Uid="QuickstartPlaygroundAIWarningPrivacy"
                                            VerticalAlignment="Center"
                                            NavigateUri="{x:Bind ViewModel.PrivacyUri, Mode=OneWay}"
                                            TabIndex="8"
                                            ToolTipService.ToolTip="{x:Bind ViewModel.PrivacyUri, Mode=OneWay}" />
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel
                                    Grid.Column="1"
                                    Margin="0,0,10,0"
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal">
                                    <Button
                                        x:Name="GenerateButton"
                                        x:Uid="QuickstartPlaygroundGenerateButton"
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        Command="{x:Bind ViewModel.GenerateCodespaceCommand}"
                                        Style="{ThemeResource AccentButtonStyle}"
                                        TabIndex="6">
                                        <ToolTipService.ToolTip>
                                            <ToolTip x:Uid="QuickstartPlaygroundGenerateButtonTooltip" />
                                        </ToolTipService.ToolTip>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </StackPanel>
                    <Grid Grid.Row="1" Visibility="{x:Bind ViewModel.GenerateCodespaceCommand.IsRunning, Mode=OneWay}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="4*" />
                        </Grid.ColumnDefinitions>
                        <!--  TODO: needs to better handle resizing; text can get truncated here  -->
                        <TextBlock
                            x:Name="ProgressStatus"
                            Grid.Column="0"
                            Margin="10"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Text="{x:Bind ViewModel.ProgressMessage, Mode=OneWay}"
                            TextWrapping="WrapWholeWords" />
                        <ProgressBar
                            Grid.Column="1"
                            Width="400"
                            Margin="30"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            AutomationProperties.LabeledBy="{Binding ElementName=ProgressStatus}"
                            IsHitTestVisible="False"
                            Value="{x:Bind ViewModel.ProgressValue, Mode=OneWay}" />
                    </Grid>
                    <!--  Progress output  -->
                    <Grid Grid.Row="2" Visibility="{x:Bind ViewModel.IsProgressOutputVisible, Mode=OneWay}">
                        <StackPanel Orientation="Vertical">
                            <Expander
                                x:Uid="QuickstartPlaygroundExtensionProgressOutput"
                                Margin="10"
                                ExpandDirection="Down"
                                IsExpanded="True"
                                TabIndex="10">
                                <Expander.Content>
                                    <ScrollViewer
                                        x:Name="ProgressOutputScrollViewer"
                                        MaxHeight="300"
                                        Margin="20"
                                        HorizontalAlignment="Left"
                                        HorizontalScrollBarVisibility="Auto"
                                        TabIndex="11"
                                        VerticalScrollBarVisibility="Auto" />
                                </Expander.Content>
                            </Expander>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>

            <!--  Bottom half of UI  -->
            <Grid Grid.Row="2" Visibility="{x:Bind ViewModel.IsErrorViewVisible, Mode=OneWay}">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Style="{StaticResource ErrorIconStyle}" />
                    <TextBlock x:Uid="QuickstartPlaygroundGenerationFailed" TextWrapping="WrapWholeWords" />
                    <TextBlock Text="{x:Bind ViewModel.ErrorMessage, Mode=OneWay}" TextWrapping="WrapWholeWords" />
                </StackPanel>
            </Grid>

            <Grid Grid.Row="2" Visibility="{x:Bind ViewModel.IsFileViewVisible, Mode=OneWay}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel
                            Grid.Column="0"
                            Margin="8"
                            HorizontalAlignment="Left"
                            Orientation="Horizontal">
                            <TextBlock x:Uid="QuickstartPlaygroundGenerationOutputLabel" Margin="2,20,20,20" />
                            <StackPanel
                                Margin="8"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                                <Button
                                    x:Name="positiveFeedbackButton"
                                    x:Uid="QuickstartPlaygroundLikeButton"
                                    Margin="4,0"
                                    VerticalAlignment="Bottom"
                                    TabIndex="20">
                                    <FontIcon FontFamily="Segoe Fluent" Glyph="👍" />
                                    <Button.Flyout>
                                        <Flyout x:Name="positiveFeedbackFlyout" Closed="PositiveFeedbackFlyout_Closed">
                                            <StackPanel>
                                                <FontIcon FontFamily="Segoe Fluent" Glyph="👍" />
                                                <TextBlock
                                                    x:Name="posProvideAddtionalFeedbackText"
                                                    x:Uid="QuickstartPlaygroundFeedbackHeader"
                                                    Style="{ThemeResource BaseTextBlockStyle}"
                                                    Visibility="{x:Bind ViewModel.PositivesGroupOne, Mode=OneWay}" />
                                                <TextBox
                                                    x:Name="positiveFeedbackTextBox"
                                                    x:Uid="QuickstartPlaygroundPositiveFeedbackPromptPlaceholder"
                                                    Margin="4"
                                                    TextWrapping="Wrap"
                                                    Visibility="{x:Bind ViewModel.PositivesGroupOne, Mode=OneWay}" />
                                                <Button
                                                    x:Name="posSubmitFeedbackButton"
                                                    x:Uid="QuickstartPlaygroundSubmitFeedback"
                                                    HorizontalAlignment="Right"
                                                    Click="PositiveFeedbackConfirmation_Click"
                                                    Visibility="{x:Bind ViewModel.PositivesGroupOne, Mode=OneWay}" />
                                                <TextBlock
                                                    x:Name="posFeedbackSuccessText"
                                                    x:Uid="QuickstartPlaygroundFeedbackSubmitted"
                                                    Style="{ThemeResource BaseTextBlockStyle}"
                                                    Visibility="{x:Bind ViewModel.PositivesGroupTwo, Mode=OneWay}" />
                                                <Button
                                                    x:Name="posCloseFlyoutButton"
                                                    x:Uid="CloseButton"
                                                    HorizontalAlignment="Right"
                                                    Click="PosCloseFlyout_Click"
                                                    Visibility="{x:Bind ViewModel.PositivesGroupTwo, Mode=OneWay}" />
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="PositiveFeedbackToolTip" x:Uid="QuickstartPlaygroundFeedbackLikeTooltip" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button
                                    x:Name="negativeFeedbackButton"
                                    x:Uid="QuickstartPlaygroundDislikeButton"
                                    Margin="4,0"
                                    VerticalAlignment="Bottom"
                                    TabIndex="21">
                                    <FontIcon FontFamily="Segoe Fluent" Glyph="👎" />
                                    <Button.Flyout>
                                        <Flyout x:Name="negativeFeedbackFlyout" Closed="NegativeFeedbackFlyout_Closed">
                                            <StackPanel>
                                                <FontIcon FontFamily="Segoe Fluent" Glyph="👎" />
                                                <TextBlock
                                                    x:Name="negProvideAddtionalFeedbackText"
                                                    x:Uid="QuickstartPlaygroundFeedbackHeader"
                                                    Style="{ThemeResource BaseTextBlockStyle}"
                                                    Visibility="{x:Bind ViewModel.NegativesGroupOne, Mode=OneWay}" />
                                                <TextBox
                                                    x:Name="negativeFeedbackTextBox"
                                                    x:Uid="QuickstartPlaygroundNegativeFeedbackPromptPlaceholder"
                                                    Margin="4"
                                                    TextWrapping="Wrap"
                                                    Visibility="{x:Bind ViewModel.NegativesGroupOne, Mode=OneWay}" />
                                                <Button
                                                    x:Name="negSubmitFeedbackButton"
                                                    x:Uid="QuickstartPlaygroundSubmitFeedback"
                                                    HorizontalAlignment="Right"
                                                    Click="NegativeFeedbackConfirmation_Click"
                                                    Visibility="{x:Bind ViewModel.NegativesGroupOne, Mode=OneWay}" />
                                                <TextBlock
                                                    x:Name="negFeedbackSuccessText"
                                                    x:Uid="QuickstartPlaygroundFeedbackSubmitted"
                                                    Style="{ThemeResource BaseTextBlockStyle}"
                                                    Visibility="{x:Bind ViewModel.NegativesGroupTwo, Mode=OneWay}" />
                                                <Button
                                                    x:Name="negCloseFlyoutButton"
                                                    x:Uid="CloseButton"
                                                    HorizontalAlignment="Right"
                                                    Click="NegCloseFlyout_Click"
                                                    Visibility="{x:Bind ViewModel.NegativesGroupTwo, Mode=OneWay}" />
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NegativeFeedbackToolTip" x:Uid="QuickstartPlaygroundFeedbackDislikeTooltip" />
                                    </ToolTipService.ToolTip>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel
                            Grid.Column="1"
                            Margin="8"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                            <TextBlock x:Uid="QuickstartPlaygroundReferenceSamplePrefix" VerticalAlignment="Center" />
                            <TextBlock
                                xmlns:ui="using:CommunityToolkit.WinUI"
                                Margin="5"
                                VerticalAlignment="Center">
                                <Hyperlink ui:HyperlinkExtensions.Command="{x:Bind ViewModel.OpenReferenceSampleCommand}" ui:HyperlinkExtensions.CommandParameter="{Binding}">[1]</Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                    <Grid
                        x:Name="FileView"
                        Grid.Row="2"
                        Margin="0,0,20,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        BorderBrush="{ThemeResource TextControlElevationBorderBrush}"
                        BorderThickness="10">
                        <Grid.Resources>
                            <DataTemplate x:Key="FolderTemplate" x:DataType="viewmodels:ExplorerItem">
                                <TreeViewItem
                                    AutomationProperties.Name="{x:Bind Name}"
                                    IsExpanded="True"
                                    ItemsSource="{x:Bind Children}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="20" Source="../Assets/folder.png" />
                                        <TextBlock Margin="0,0,10,0" />
                                        <TextBlock Text="{x:Bind Name}" />
                                    </StackPanel>
                                </TreeViewItem>
                            </DataTemplate>

                            <DataTemplate x:Key="FileTemplate" x:DataType="viewmodels:ExplorerItem">
                                <TreeViewItem AutomationProperties.Name="{x:Bind Name}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="20" Source="../Assets/file.png" />
                                        <TextBlock Margin="0,0,10,0" />
                                        <TextBlock Text="{x:Bind Name}" />
                                    </StackPanel>
                                </TreeViewItem>
                            </DataTemplate>
                            <viewmodels:ExplorerItemTemplateSelector
                                x:Key="ExplorerItemTemplateSelector"
                                FileTemplate="{StaticResource FileTemplate}"
                                FolderTemplate="{StaticResource FolderTemplate}" />
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TreeView
                            x:Name="FolderHierarchy"
                            Grid.Column="0"
                            Height="Auto"
                            Margin="20"
                            ItemInvoked="FolderHierarchy_ItemInvoked"
                            ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}"
                            ItemsSource="{x:Bind ViewModel.DataSource, Mode=OneWay}"
                            TabIndex="23" />
                        <TextBlock
                            x:Name="GeneratedFileContent"
                            Grid.Column="1"
                            Margin="20"
                            FontFamily="{StaticResource CascadiaMonoFontFamily}"
                            IsTabStop="True"
                            IsTextSelectionEnabled="True"
                            TabIndex="24"
                            Text="{x:Bind ViewModel.GeneratedFileContent, Mode=OneWay}"
                            TextWrapping="WrapWholeWords" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </controls:SetupShell>
</UserControl>
