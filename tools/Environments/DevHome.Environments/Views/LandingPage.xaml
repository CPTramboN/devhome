<commonviews:ToolPage
    x:Class="DevHome.Environments.Views.LandingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:DevHome.Common.Behaviors"
    xmlns:commonCustomControls="using:DevHome.Common.Environments.CustomControls"
    xmlns:commonModels="using:DevHome.Common.Environments.Models"
    xmlns:commonviews="using:DevHome.Common.Views"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:customControls="using:DevHome.Environments.CustomControls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:selectors="using:DevHome.Environments.Selectors"
    xmlns:views="using:DevHome.Common.Views"
    xmlns:vm="using:DevHome.Environments.ViewModels"
    xmlns:winUIBehaviors="using:CommunityToolkit.WinUI.Behaviors"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    Loaded="OnLoaded">
    <commonviews:ToolPage.Resources>
        <ResourceDictionary Source="ms-appx:///DevHome.Common/Environments/Templates/EnvironmentsTemplates.xaml" />
    </commonviews:ToolPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Adding unshared resources/templates here  -->
        <Grid.Resources>

            <converters:EmptyCollectionToObjectConverter
                x:Key="EmptyCollectionVisibilityConverter"
                EmptyValue="Collapsed"
                NotEmptyValue="Visible" />
            <converters:BoolToVisibilityConverter
                x:Key="NegatedBoolToVisibilityConverter"
                FalseValue="Visible"
                TrueValue="Collapsed" />

            <!--  Launch Button template  -->
            <DataTemplate x:Key="LaunchButton" x:DataType="vm:ComputeSystemViewModel">
                <StackPanel Visibility="{x:Bind ShouldShowLaunchOperation, Mode=OneWay}">
                    <!--  The split button with a menu flyout is only shown when there are other operations the extension supports other than launching  -->
                    <SplitButton
                        x:Uid="LaunchButton"
                        VerticalAlignment="Top"
                        Command="{x:Bind LaunchActionCommand}"
                        Style="{StaticResource CardBodySplitButtonStyle}"
                        Visibility="{x:Bind ShouldShowSplitButton, Mode=OneWay}">
                        <SplitButton.Flyout>
                            <customControls:CardFlyout ItemsViewModels="{x:Bind LaunchOperations, Mode=OneWay}" />
                        </SplitButton.Flyout>
                    </SplitButton>

                    <!--  A single button template is shown when the extension only supports launching from the launch button.  -->
                    <Button
                        x:Uid="LaunchButton"
                        VerticalAlignment="Top"
                        Command="{x:Bind LaunchActionCommand}"
                        Style="{StaticResource CardBodyLaunchButtonStyle}"
                        Visibility="{x:Bind ShouldShowSplitButton, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
                </StackPanel>
            </DataTemplate>

            <!--  Three Dot Button template  -->
            <DataTemplate x:Key="ThreeDotsButton" x:DataType="vm:ComputeSystemViewModel">
                <Grid>
                    <Button x:Uid="MoreOptionsButton" Style="{StaticResource HorizontalThreeDotsStyle}">
                        <Button.Flyout>
                            <customControls:CardFlyout ItemsViewModels="{x:Bind DotOperations, Mode=OneWay}" />
                        </Button.Flyout>
                    </Button>
                </Grid>
            </DataTemplate>

            <!--  Three Dot Button for create compute system operation template  -->
            <DataTemplate x:Key="ThreeDotsButtonForCreation" x:DataType="vm:CreateComputeSystemOperationViewModel">
                <Grid>
                    <Button
                        AutomationProperties.Name="{x:Bind MoreOptionsButtonName}"
                        Style="{StaticResource HorizontalThreeDotsStyle}"
                        ToolTipService.ToolTip="{x:Bind MoreOptionsButtonName}">
                        <Button.Flyout>
                            <customControls:CardFlyout ItemsViewModels="{x:Bind DotOperations, Mode=OneWay}" />
                        </Button.Flyout>
                    </Button>
                </Grid>
            </DataTemplate>

            <!--  Properties template for the compute system properties that appear within a horizontal card  -->
            <DataTemplate x:Key="BottomRowProperties" x:DataType="commonModels:CardProperty">
                <Grid Margin="0,2,5,0" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="6*" />
                    </Grid.ColumnDefinitions>
                    <Image
                        Grid.Column="0"
                        Width="{StaticResource ComputeSystemIcon12px}"
                        Height="{StaticResource ComputeSystemIcon12px}"
                        MaxWidth="50"
                        Margin="0,0,10,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Source="{x:Bind Icon, Mode=OneWay}"
                        Visibility="{x:Bind Icon, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}" />
                    <TextBlock
                        Grid.Column="1"
                        Margin="0,0,5,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        IsTextSelectionEnabled="True"
                        Text="{x:Bind Title, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis"
                        Visibility="{x:Bind Title, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}" />
                    <TextBlock
                        Grid.Column="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        IsTextSelectionEnabled="True"
                        Text="{x:Bind Value, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis"
                        Visibility="{x:Bind Value, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}" />
                </Grid>
            </DataTemplate>

            <!--  Shimmer template from SetupFlow/SetupTargetView.xaml  -->
            <DataTemplate x:Key="ComputeSystemLoadingTemplate">
                <ListView
                    ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerForManagementPageStyle}"
                    ItemTemplate="{StaticResource HorizontalCardRootShimmerTemplate}"
                    SelectionMode="None">
                    <x:String>Empty value for list since it doesn't need to use any bindings.</x:String>
                    <x:String>Empty value for list since it doesn't need to use any bindings.</x:String>
                </ListView>
            </DataTemplate>

            <DataTemplate x:Key="ComputeSystemTemplate" x:DataType="vm:ComputeSystemViewModel">
                <Grid Style="{StaticResource HorizontalCardRootForEnvironmentsPage}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!--  Card Header : Title, small icon, '...' button  -->
                    <Grid Grid.Row="0">
                        <commonCustomControls:CardHeader
                            ActionControlTemplate="{StaticResource ThreeDotsButton}"
                            HeaderCaption="{x:Bind ProviderDisplayName, Mode=OneWay}"
                            HeaderIcon="{x:Bind HeaderImage, Mode=OneWay}"
                            OperationsVisibility="{x:Bind ShouldShowDotOperations, Mode=OneWay}" />
                    </Grid>
                    <!--  Card Body : Name, thumbnail, 'Launch' button  -->
                    <Grid Grid.Row="1">
                        <commonCustomControls:CardBody
                            ActionControlTemplate="{StaticResource LaunchButton}"
                            CardState="{x:Bind State, Mode=OneWay}"
                            ComputeSystemAlternativeTitle="{x:Bind AlternativeName, Mode=OneWay}"
                            ComputeSystemImage="{x:Bind BodyImage, Mode=OneWay}"
                            ComputeSystemOperationStatus="{x:Bind UiMessageToDisplay, Mode=OneWay}"
                            ComputeSystemProperties="{x:Bind Properties, Mode=OneWay}"
                            ComputeSystemPropertyTemplate="{StaticResource BottomRowProperties}"
                            ComputeSystemTitle="{x:Bind Name, Mode=OneWay}"
                            ShouldShowInDefiniteProgress="{x:Bind IsOperationInProgress, Mode=OneWay}"
                            StateColor="{x:Bind StateColor, Mode=OneWay}" />
                    </Grid>
                </Grid>
            </DataTemplate>

            <!--  Per Provider Card Template  -->
            <DataTemplate x:Key="PerProviderComputeSystemTemplate" x:DataType="vm:PerProviderViewModel">
                <Grid Visibility="{x:Bind IsVisible, Mode=OneWay}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,0,3"
                            Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                            IsTextSelectionEnabled="True"
                            Text="{x:Bind ProviderName}" />
                        <TextBlock
                            Margin="5,0,0,3"
                            Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                            IsTextSelectionEnabled="True"
                            Text="{x:Bind DecoratedDevID}" />
                    </StackPanel>
                    <Grid Grid.Row="1">
                        <ListView
                            ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerForManagementPageStyle}"
                            ItemTemplate="{StaticResource ComputeSystemTemplate}"
                            ItemsSource="{x:Bind ComputeSystemAdvancedView, Mode=OneWay}"
                            SelectionMode="None">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                        </ListView>
                    </Grid>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="CreateComputeSystemOperationTemplate" x:DataType="vm:CreateComputeSystemOperationViewModel">
                <Grid Style="{StaticResource HorizontalCardRootForEnvironmentsPage}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!--  Card Header : Title, small icon, '...' button  -->
                    <Grid Grid.Row="0">
                        <commonCustomControls:CardHeader
                            ActionControlTemplate="{StaticResource ThreeDotsButtonForCreation}"
                            HeaderCaption="{x:Bind ProviderDisplayName, Mode=OneWay}"
                            HeaderIcon="{x:Bind HeaderImage, Mode=OneWay}" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <commonCustomControls:CardBody
                            ComputeSystemOperationStatus="{x:Bind UiMessageToDisplay, Mode=OneWay}"
                            ComputeSystemTitle="{x:Bind EnvironmentName, Mode=OneWay}"
                            ShouldShowInDefiniteProgress="{x:Bind IsOperationInProgress, Mode=OneWay}"
                            StateColor="{x:Bind StateColor, Mode=OneWay}" />
                    </Grid>
                </Grid>
            </DataTemplate>

            <selectors:CardItemTemplateSelector
                x:Key="CardItemTemplateSelector"
                CreateComputeSystemOperationTemplate="{StaticResource CreateComputeSystemOperationTemplate}"
                PerProviderComputeSystemTemplate="{StaticResource PerProviderComputeSystemTemplate}" />

        </Grid.Resources>
        <!--  Templates end here  -->

        <!--  Header  -->
        <Grid
            x:Name="TitleGrid"
            Grid.Row="0"
            MaxWidth="{ThemeResource MaxPageContentWidth}"
            Margin="{ThemeResource HeaderMargin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Name="EnvironmentsHeader"
                x:Uid="EnvironmentsHeader"
                Grid.Column="0"
                HorizontalAlignment="Left"
                Style="{ThemeResource SubtitleTextBlockStyle}" />
            <views:AddCreateButton
                x:Uid="CreateEnvironmentButton"
                Grid.Column="3"
                HorizontalAlignment="Right"
                Command="{x:Bind ViewModel.CallToActionInvokeButtonCommand}"
                Visibility="{x:Bind ViewModel.ShouldNavigateToExtensionsPage, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
            <Button
                x:Uid="GoToExtensionsLibrary"
                Grid.Column="3"
                HorizontalAlignment="Right"
                Command="{x:Bind ViewModel.CallToActionInvokeButtonCommand}"
                Visibility="{x:Bind ViewModel.ShouldNavigateToExtensionsPage, Mode=OneWay}" />
        </Grid>

        <!--  Filtering and sorting  -->
        <Grid
            Grid.Row="1"
            MaxWidth="{ThemeResource MaxPageContentWidth}"
            Margin="{ThemeResource ContentPageMargin}"
            ColumnSpacing="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <!--  Search field  -->
            <AutoSuggestBox
                x:Name="SearchTextBox"
                x:Uid="SearchTextBox"
                Grid.Column="0"
                Width="250"
                HorizontalAlignment="Left"
                VerticalAlignment="Center">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="TextChanged">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.SearchHandlerCommand, Mode=OneWay}" CommandParameter="{Binding Text, ElementName=SearchTextBox}" />
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </AutoSuggestBox>
            <StackPanel
                Grid.Column="2"
                HorizontalAlignment="Right"
                Orientation="Horizontal"
                Spacing="16">
                <!--  Provider field  -->
                <TextBlock x:Uid="ProviderTextBlock" VerticalAlignment="Center" />
                <ComboBox
                    x:Name="ProviderSelectionComboBox"
                    x:Uid="ProviderSelectionComboBox"
                    MinWidth="180"
                    Margin="0,3,0,0"
                    ItemsSource="{x:Bind ViewModel.Providers, Mode=OneWay}"
                    SelectedIndex="{x:Bind ViewModel.SelectedProviderIndex, Mode=TwoWay}">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ProviderHandlerCommand}" CommandParameter="{Binding SelectedIndex, ElementName=ProviderSelectionComboBox, Mode=OneWay}" />
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ComboBox>
                <!--  Sort field  -->
                <TextBlock x:Uid="SortByTextBlock" VerticalAlignment="Center" />
                <ComboBox
                    x:Name="SortSelectionComboBox"
                    x:Uid="SortSelectionComboBox"
                    MinWidth="167"
                    Margin="0,3,0,0"
                    SelectedIndex="{x:Bind ViewModel.SelectedSortIndex, Mode=TwoWay}">
                    <ComboBoxItem x:Uid="SortByName" />
                    <ComboBoxItem x:Uid="SortByNameDesc" />
                    <ComboBoxItem x:Uid="SortByLastConnected" />
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.SortHandlerCommand}" />
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ComboBox>
                <!--  Sync button  -->
                <Button
                    x:Uid="SyncEnvironmentsButton"
                    Margin="0,3,0,0"
                    Command="{x:Bind ViewModel.SyncButtonCommand}">
                    <StackPanel
                        Padding="20,0"
                        Orientation="Horizontal"
                        Spacing="8">
                        <FontIcon
                            FontFamily="{StaticResource SymbolThemeFontFamily}"
                            FontSize="16"
                            Glyph="&#xE72C;" />
                        <TextBlock x:Uid="SyncButtonTextBlock" />
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>

        <!--  Last synced text block  -->
        <Grid
            Grid.Row="2"
            MaxWidth="{ThemeResource MaxPageContentWidth}"
            Margin="{ThemeResource ContentPageMargin}">
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <TextBlock
                    x:Uid="LastSyncTextBlock"
                    Margin="0,12,3,12"
                    VerticalAlignment="Center"
                    Foreground="{ThemeResource TextFillColorSecondaryBrush}" />
                <TextBlock
                    VerticalAlignment="Center"
                    Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                    Text="{x:Bind ViewModel.LastSyncTime, Mode=OneWay}" />
            </StackPanel>
        </Grid>

        <ScrollViewer
            Grid.Row="3"
            MaxWidth="{ThemeResource MaxPageContentWidth}"
            Margin="{ThemeResource ContentPageMargin}"
            Style="{StaticResource EnvironmentScrollViewerStyle}">
            <Grid>
                <!--  Per Compute System card  -->
                <StackPanel>
                    <ListView
                        MaxWidth="{ThemeResource MaxPageContentWidth}"
                        ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerForManagementPageStyle}"
                        ItemTemplateSelector="{StaticResource CardItemTemplateSelector}"
                        ItemsSource="{x:Bind ViewModel.PerProviderViewModels}"
                        SelectionMode="None">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>

                    <!--  Shimmer  -->
                    <StackPanel Visibility="{x:Bind ViewModel.ShowLoadingShimmer, Mode=OneWay}">
                        <ContentControl HorizontalContentAlignment="Stretch" ContentTemplate="{StaticResource ComputeSystemLoadingTemplate}" />
                    </StackPanel>
                </StackPanel>

                <!--  No extension found, show link to extensions page  -->
                <StackPanel
                    Margin="0,0,0,250"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="{x:Bind ViewModel.CallToActionText, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}">
                    <TextBlock
                        HorizontalAlignment="Center"
                        HorizontalTextAlignment="Center"
                        Text="{x:Bind ViewModel.CallToActionText, Mode=OneWay}"
                        TextWrapping="WrapWholeWords" />
                    <views:AddCreateHyperlinkButton
                        Grid.Column="3"
                        HorizontalAlignment="Center"
                        Command="{x:Bind ViewModel.CallToActionInvokeButtonCommand}"
                        Content="{x:Bind ViewModel.CallToActionHyperLinkButtonText, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.ShouldNavigateToExtensionsPage, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}" />
                    <HyperlinkButton
                        Grid.Column="3"
                        HorizontalAlignment="Center"
                        Command="{x:Bind ViewModel.CallToActionInvokeButtonCommand}"
                        Content="{x:Bind ViewModel.CallToActionHyperLinkButtonText, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.ShouldNavigateToExtensionsPage, Mode=OneWay}" />
                </StackPanel>
            </Grid>
        </ScrollViewer>

        <!--  Notification panel  -->
        <Grid
            Grid.Row="3"
            MaxWidth="{ThemeResource MaxPageContentWidth}"
            Margin="{ThemeResource ContentPageMargin}">
            <InfoBar
                MaxWidth="600"
                Margin="24"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom">
                <i:Interaction.Behaviors>
                    <winUIBehaviors:StackedNotificationsBehavior x:Name="NotificationQueue" />
                </i:Interaction.Behaviors>
            </InfoBar>
        </Grid>
    </Grid>
</commonviews:ToolPage>
