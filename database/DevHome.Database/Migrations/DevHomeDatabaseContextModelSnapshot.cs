// <auto-generated />
using System;
using DevHome.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevHome.Database.Migrations
{
    [DbContext(typeof(DevHomeDatabaseContext))]
    partial class DevHomeDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("DevHome.Database.DatabaseModels.RepositoryManagement.Repository", b =>
                {
                    b.Property<int>("RepositoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalBranchName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RepositoryClonePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("RepositoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("RepositoryId");

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("DevHome.Database.DatabaseModels.RepositoryManagement.RepositoryCommit", b =>
                {
                    b.Property<int>("RepositoryCommitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CommitDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CommitHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommitUri")
                        .HasColumnType("TEXT");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RepositoryCommitId");

                    b.HasIndex("RepositoryId");

                    b.ToTable("RepositoryCommits");
                });

            modelBuilder.Entity("DevHome.Database.DatabaseModels.RepositoryManagement.RepositoryMetadata", b =>
                {
                    b.Property<int>("RepositoryMetadataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHiddenFromPage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UtcDateHidden")
                        .HasColumnType("TEXT");

                    b.HasKey("RepositoryMetadataId");

                    b.HasIndex("RepositoryId")
                        .IsUnique();

                    b.ToTable("RepositoryMetadata");
                });

            modelBuilder.Entity("DevHome.Database.DatabaseModels.RepositoryManagement.RepositoryCommit", b =>
                {
                    b.HasOne("DevHome.Database.DatabaseModels.RepositoryManagement.Repository", "Repository")
                        .WithMany("RemoteCommits")
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("DevHome.Database.DatabaseModels.RepositoryManagement.RepositoryMetadata", b =>
                {
                    b.HasOne("DevHome.Database.DatabaseModels.RepositoryManagement.Repository", "Repository")
                        .WithOne("RepositoryMetadata")
                        .HasForeignKey("DevHome.Database.DatabaseModels.RepositoryManagement.RepositoryMetadata", "RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("DevHome.Database.DatabaseModels.RepositoryManagement.Repository", b =>
                {
                    b.Navigation("RemoteCommits");

                    b.Navigation("RepositoryMetadata");
                });
#pragma warning restore 612, 618
        }
    }
}
